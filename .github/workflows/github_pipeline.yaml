name: Python CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install dependencies
        run: uv sync --locked --all-extras --dev

      - name: Ruff linting and formatting
        uses: astral-sh/ruff-action@v3

  sast-scan:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    strategy:
      matrix:
        language: [ 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  # zap-scan:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4

  #   - name: Start web app with Docker Compose
  #     run: |
  #       docker compose up -d
  #       sleep 30  # Adjust this delay based on how long your app takes to start

  #   - name: Run OWASP ZAP Baseline Scan
  #     uses: zaproxy/action-baseline@v0.10.0
  #     with:
  #       target: 'http://localhost:8000'
  #       fail_action: true
  #       allow_issue_writing: false
  #       report_file: zap_report.html

  #   - name: Upload ZAP Report
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: zap-report
  #       path: zap_report.html

