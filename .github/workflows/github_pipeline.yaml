name: Python CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   services:
  #     docker:
  #       image: docker:19.03.12
  #       options: --privileged

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.11'

  #     - name: Install uv
  #       uses: astral-sh/setup-uv@v5

  #     - name: Install dependencies
  #       run: uv sync --locked --all-extras --dev

  #     - name: Ruff linting and formatting
  #       uses: astral-sh/ruff-action@v3

  # codeql:
  #   name: CodeQL SAST
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   permissions:
  #     security-events: write
  #     actions: read
  #     contents: read

  #   strategy:
  #     matrix:
  #       language: [ 'python' ]

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4

  #   - name: Initialize CodeQL
  #     uses: github/codeql-action/init@v3
  #     with:
  #       languages: ${{ matrix.language }}

  #   - name: Autobuild
  #     uses: github/codeql-action/autobuild@v3

  #   - name: Perform CodeQL Analysis
  #     uses: github/codeql-action/analyze@v3

  # gitleaks:
  #   name: Run Gitleaks
  #   runs-on: ubuntu-latest
  #   needs: [build, codeql]
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Scan for Secrets with Gitleaks
  #       uses: gitleaks/gitleaks-action@v2

  # bandit:
  #   name: Run Bandit
  #   runs-on: ubuntu-latest
  #   needs: [build, codeql, gitleaks]
  #   permissions:
  #     # required for all workflows
  #     security-events: write
  #     # only required for workflows in private repositories
  #     actions: read
  #     contents: read
  #   steps:
  #     - name: Perform Bandit Analysis
  #       uses: PyCQA/bandit-action@v1
tests:
  runs-on: ubuntu-latest
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "0.4.25"

    - name: Install dependencies
      run: uv sync --locked --all-extras --dev

    - name: Run unit tests with pytest
      run: uv run pytest -v --durations=0 --cov --cov-report=xml

  dast-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: docker compose build

    - name: Run Docker container in detached mode
      run: |
        docker compose up -d

    - name: Wait for app to be ready
      run: |
        echo "Waiting for Python app to be ready on http://localhost:8000 ..."
        for i in {1..30}; do
          if curl --silent --fail http://localhost:8000; then
            echo "App is up!"
            exit 0
          else
            echo "Waiting for app..."
            sleep 2
          fi
        done
        echo "App did not start in time"
        exit 1

    - name: Run DAST tests with OWASP ZAP
      uses: zaproxy/action-baseline@v0.14.0
      with:
        docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
        target: 'http://localhost:8000'
        allow_issue_writing: false
        cmd_options: '-r -a'

    - name: Upload DAST report
      uses: actions/upload-artifact@v4
      with:
        name: zap-report
        path: |
          report_html.html

    - name: Cleanup - Stop and remove container
      run: |
        docker compose down --remove-orphans

