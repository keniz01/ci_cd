name: Python CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install dependencies
        run: uv sync --locked --all-extras --dev

      - name: Ruff linting and formatting
        uses: astral-sh/ruff-action@v3

  codeql:
    name: CodeQL SAST
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      security-events: write
      actions: read
      contents: read

    strategy:
      matrix:
        language: [ 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  gitleaks:
    name: Run Gitleaks
    runs-on: ubuntu-latest
    needs: [build, codeql]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Scan for Secrets with Gitleaks
        uses: gitleaks/gitleaks-action@v2

bandit:
  name: Run Bandit SAST
  runs-on: ubuntu-latest
  needs: [build, codeql, gitleaks]
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Set up uv
      uses: astral-sh/setup-uv@v5

    - name: Install Bandit
      run: uv add bandit

    - name: Run Bandit on the codebase
      run: |
        bandit -r . -f json -o bandit-report.json
        bandit -r . -ll  # also show results in console

    - name: Upload Bandit report artifact
      uses: actions/upload-artifact@v4
      with:
        name: bandit-report
        path: bandit-report.json

    - name: Fail if issues found
      run: |
        issues=$(bandit -r . -f json | jq '.results | length')
        if [ "$issues" -gt 0 ]; then
          echo "::error::Bandit found $issues issues."
          exit 1  

  # zap-scan:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4

  #   - name: Start web app with Docker Compose
  #     run: |
  #       docker compose up -d
  #       sleep 30  # Adjust this delay based on how long your app takes to start

  #   - name: Run OWASP ZAP Baseline Scan
  #     uses: zaproxy/action-baseline@v0.10.0
  #     with:
  #       target: 'http://localhost:8000'
  #       fail_action: true
  #       allow_issue_writing: false
  #       report_file: zap_report.html

  #   - name: Upload ZAP Report
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: zap-report
  #       path: zap_report.html

